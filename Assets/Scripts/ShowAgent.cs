/*
 * Blocks.cs
 * RVO2 Library C#
 *
 * Copyright 2008 University of North Carolina at Chapel Hill
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Please send all bug reports to <geom@cs.unc.edu>.
 *
 * The authors may be contacted via:
 *
 * Jur van den Berg, Stephen J. Guy, Jamie Snape, Ming C. Lin, Dinesh Manocha
 * Dept. of Computer Science
 * 201 S. Columbia St.
 * Frederick P. Brooks, Jr. Computer Science Bldg.
 * Chapel Hill, N.C. 27599-3175
 * United States of America
 *
 * <http://gamma.cs.unc.edu/RVO2/>
 */

/*
 * Example file showing a demo with 100 agents split in four groups initially
 * positioned in four corners of the environment. Each agent attempts to move to
 * other side of the environment through a narrow passage generated by four
 * obstacles. There is no roadmap to guide the agents around the obstacles.
 */

#define RVO_SEED_RANDOM_NUMBER_GENERATOR

using System;
using System.Collections.Generic;
using UnityEngine;
using Random = System.Random;

namespace RVO
{
    class ShowAgent : MonoBehaviour
    {
        /* Store the gameObjects of the agents */
        private IList<GameObject> agentObjs = new List<GameObject>();

        public GameObject agentNode;

        public GameObject obstacleNode;

        public GameObject agentPrefab;

        public float moveSpeed = 2.0f;

        /* Store the goals of the agents. */
        IList<Vector2> goals;

        private IList<bool> arrived;
        
        public List<GenAgentInfo> genAgentInfos;

        [Serializable]
        public class GenAgentInfo
        {
            public Vector3 genPos;
            public Vector3 dir;
        }

        /** Random number generator. */
        Random random;

        ShowAgent()
        {
            goals = new List<Vector2>();
            arrived = new List<bool>();

            #if RVO_SEED_RANDOM_NUMBER_GENERATOR
            random = new Random();
            #else
            random = new Random(0);
            #endif
        }
        
        // Start is called before the first frame update
        void Start()
        {
            /* Set up the scenario. */
            setupScenario();

            if (agentNode == null)
                agentNode = GameObject.Find("Agents");

            if (obstacleNode == null)
                obstacleNode = GameObject.Find("Obstacles");
        }
        
        void setupScenario()
        {
            /*
             * Add agents, specifying their start position, and store their
             * goals on the opposite side of the environment.
             */
            foreach (GenAgentInfo genAgentInfo in genAgentInfos)
            {
                // addAgent(new Vector2(55.0f + i * 10.0f, 55.0f + j * 10.0f));
                // goals.Add(new Vector2(-55.0f - j * 10.0f, -55.0f - i * 10.0f));
            }
        }

        private void addAgent(Vector2 agentPos)
        {
            // 下面为创建 Agent GameObjects
            if (agentPrefab == null)
                return;

            GameObject newAgentObj = GameObject.Instantiate(agentPrefab, agentNode.transform, true);
            newAgentObj.transform.position = new Vector3(agentPos.x(), 0, agentPos.y());
            agentObjs.Add(newAgentObj);
            
            arrived.Add(false);
        }
        
    }
}
